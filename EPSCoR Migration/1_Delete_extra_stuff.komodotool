{
  "keyboard_shortcut": "", 
  "name": "1. Delete extra stuff", 
  "language": "JavaScript", 
  "trigger": "trigger_postopen", 
  "value": [
    "// Macro recorded on: Tue Nov 12 2013 16:53:46 GMT-1000 (Hawaiian Standard Time)", 
    "komodo.assertMacroVersion(3);", 
    "if (komodo.view) { komodo.view.setFocus(); }", 
    "var view = ko.views.manager.currentView,", 
    "    scimoz = view.scimoz;", 
    "    ", 
    "var koDoc = (komodo.koDoc === undefined ? komodo.document : komodo.koDoc);", 
    "var language = koDoc.language;", 
    "", 
    "//var curr_line = scimoz.lineFromPosition(scimoz.currentPos);", 
    "//var start = scimoz.positionFromLine(curr_line);", 
    "//var end = scimoz.getLineEndPosition(curr_line);", 
    "//scimoz.setSel(start, end);", 
    "//alert(scimoz.selText);", 
    "", 
    "//ko.commands.doCommand('cmd_lineNext')", 
    "//alert(komodo.view.selection);", 
    "//scimoz.lineDelete();", 
    "", 
    "String.prototype.trim = function(){", 
    "  return this.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '').replace(/[\\r\\n]/, '');", 
    "}", 
    "", 
    "var curr_line = -1;//scimoz.lineFromPosition(scimoz.currentPos);", 
    "var lines_returned = 0;", 
    "function selectNextQuery() {", 
    "  if (curr_line == scimoz.lineCount) {", 
    "    return;", 
    "  }", 
    "  var start, end, text, test_text;", 
    "  lines_returned = 0;", 
    "  do{", 
    "    curr_line++;", 
    "    start = scimoz.positionFromLine(curr_line);", 
    "    end = scimoz.getLineEndPosition(curr_line);", 
    "    scimoz.setSel(start, end);", 
    "    text = scimoz.selText.trim();", 
    "    test_text = text.substr(0, 2);", 
    "  } while ((test_text == '' || test_text == '--') && curr_line < scimoz.lineCount);", 
    "  lines_returned++;", 
    "  var is_insert_query = false;", 
    "  while (curr_line < scimoz.lineCount) {//text.substr(-2,2) != ');' && !(text.substr(-1,1) == ';' && text.indexOf('VALUES (') != -1) && ", 
    "    var last_two = text.substr(-2,2);", 
    "    if (last_two == ');') {", 
    "      break;", 
    "    }", 
    "    if (last_two.substr(-1,1) == ';' && !is_insert_query) {", 
    "      if (text.indexOf('VALUES (') != -1) {", 
    "        is_insert_query = true;", 
    "      }else{", 
    "        break;", 
    "      }", 
    "    }", 
    "    ", 
    "    curr_line++;", 
    "    lines_returned++;", 
    "    end = scimoz.getLineEndPosition(curr_line);", 
    "    scimoz.setSel(start, end);", 
    "    text = scimoz.selText;", 
    "  }", 
    "  return scimoz.selText;", 
    "}", 
    "", 
    "function deleteSelection() {", 
    "  //alert(scimoz.selText);", 
    "  //var matches = scimoz.selText.match(/\\n/g);", 
    "  //var count = matches?matches.length:1;", 
    "  //scimoz.replaceSel('');", 
    "  //for (var i = 0; i < count; i++){", 
    "  //  scimoz.lineDelete();", 
    "  //  curr_line--;", 
    "  //}", 
    "  ", 
    "  scimoz.replaceSel('');", 
    "  for (var i = 0; i < lines_returned; i++){", 
    "    scimoz.lineDelete();", 
    "    curr_line--;", 
    "  }", 
    "}", 
    "", 
    "var delete_fields = {", 
    "  field_er_news_front_page: true,", 
    "  field_er_nsf_grant_signatory: true,", 
    "  field_er_pm_acad: true,", 
    "  field_er_pm_cal: true,", 
    "  field_er_pm_sumr: true,", 
    "  field_er_proposal_entity: true,", 
    "  field_er_push_notifications: true,", 
    "  field_er_citizenship: true,", 
    "  field_er_funded_effort: true,", 
    "  field_er_funding: true,", 
    "  field_institution_link: true,", 
    "  //temporary:", 
    "  field_er_rcr_inperson: true,", 
    "  //weirdo Utah fields:", 
    "  field_number_of_non_iutah_partic: true,", 
    "};", 
    "", 
    "scimoz.beginUndoAction();", 
    "while(curr_line+1 < scimoz.lineCount /*&& curr_line < 15*/){", 
    "  //alert(curr_line + \" < \" + scimoz.lineCount);", 
    "  var text = selectNextQuery().trim();", 
    "  //alert(text.substr(0, 7));", 
    "  if (text.substr(0, 6) == 'INSERT') {", 
    "    var table = text.split(/INSERT INTO ([a-zA-Z_-]+) .*/g)[1];", 
    "    var field_name = table?table.split(/(field_data_|field_revision_)/)[2]:false;", 
    "    /*/(field_data_|field_revision_).+/.test(table)*/", 
    "    if ((field_name && !(field_name in delete_fields) ) || table == 'users' || table == 'users_roles' || table == 'node' || table == 'node_revision' || table == 'node_access' || table == 'node_comment_statistics') {", 
    "      //ok", 
    "    }else{", 
    "      deleteSelection();", 
    "    }", 
    "  }else{", 
    "    deleteSelection();", 
    "  }", 
    "}", 
    "scimoz.endUndoAction();"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "trigger_enabled": false, 
  "async": false, 
  "type": "macro"
}